{"filter":false,"title":"timeslots.mysql","tooltip":"/packages/timeslots.mysql","undoManager":{"mark":20,"position":20,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":0},"end":{"row":2,"column":0},"action":"insert","lines":["",""]}]}],[{"group":"doc","deltas":[{"start":{"row":2,"column":0},"end":{"row":94,"column":2},"action":"insert","lines":["-- -----------------------------------------------------","-- RI Tree Left/Right node finders.","-- -----------------------------------------------------","DROP PROCEDURE IF EXISTS `bm_rules_timeslot_left_nodes`$$","","CREATE PROCEDURE `bm_rules_timeslot_left_nodes`(lower INT, upper INT)","BEGIN","","  \tDECLARE treeHeight INT DEFAULT 0;","\tDECLARE treeRoot INT DEFAULT 0; ","\tDECLARE treeNode INT DEFAULT 0; ","\tDECLARE searchStep INT DEFAULT 0;","\tDECLARE tmpTable VARCHAR(30)  DEFAULT 'timeslot_left_nodes_result';","\t","\tSET treeHeight  = ceil(LOG2((SELECT MAX(`slot_id`) FROM `slots`)+1));","\tSET treeRoot    = power(2,(treeHeight-1)); ","\tSET treeNode    = treeRoot;","\tSET searchStep  =  treeNode / 2;","","    -- holds a colletion of forkNodes ","   \tDROP TEMPORARY TABLE IF EXISTS `timeslot_left_nodes_result`;","    CREATE TEMPORARY TABLE `timeslot_left_nodes_result` (`node` INT NOT NULL PRIMARY KEY)ENGINE=MEMORY; ","    ","    ","   -- descend from root node to lower","   myloop:WHILE searchStep >= 1 DO","  ","    -- right node","    IF lower < treeNode THEN","      SET treeNode = treeNode - searchStep;","  ","    -- left node","    ELSEIF lower > treeNode THEN","  ","      INSERT INTO `timeslot_left_nodes_result`(node) VALUES(treeNode);","      SET treeNode = treeNode + searchStep;","  ","    -- lower","    ELSE LEAVE myloop;","    END IF;  ","","    SET searchStep = searchStep / 2;","  ","  END WHILE myloop;","","END;","$$","","","DROP PROCEDURE IF EXISTS `bm_rules_timeslot_right_nodes`$$","","CREATE PROCEDURE `bm_rules_timeslot_right_nodes`(lower INT, upper INT)","BEGIN","","  \tDECLARE treeHeight INT DEFAULT 0;","\tDECLARE treeRoot INT DEFAULT 0; ","\tDECLARE treeNode INT DEFAULT 0; ","\tDECLARE searchStep INT DEFAULT 0;","\tDECLARE tmpTable VARCHAR(30)  DEFAULT 'timeslot_left_nodes_result';","\t","\tSET treeHeight  = ceil(LOG2((SELECT MAX(`slot_id`) FROM `slots`)+1));","\tSET treeRoot    = power(2,(treeHeight-1)); ","\tSET treeNode    = treeRoot;","\tSET searchStep  =  treeNode / 2;","","    -- holds a colletion of forkNodes ","   \tDROP TEMPORARY TABLE IF EXISTS `timeslot_right_nodes_result`;","    CREATE TEMPORARY TABLE `timeslot_right_nodes_result` (`node` INT NOT NULL PRIMARY KEY)ENGINE=MEMORY; ","    ","    ","   -- descend from root node to lower","   myloop:WHILE searchStep >= 1 DO","  ","    -- right node","    IF upper > treeNode THEN","      SET treeNode = treeNode + searchStep;","  ","    -- left node","    ELSEIF upper < treeNode THEN","  ","      INSERT INTO `timeslot_right_nodes_result`(node) VALUES(treeNode);","      SET treeNode = treeNode - searchStep;","  ","    -- lower","    ELSE LEAVE myloop;","    END IF;  ","","    SET searchStep = searchStep / 2;","  ","  END WHILE myloop;","","END;","$$"]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":4,"column":12},"action":"insert","lines":["-- -----------------------------------------------------","-- Procedures for Install Package","-- -----------------------------------------------------","","DELIMITER $$"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":18},"end":{"row":1,"column":25},"action":"remove","lines":["Install"]},{"start":{"row":1,"column":18},"end":{"row":1,"column":19},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":19},"end":{"row":1,"column":20},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":20},"end":{"row":1,"column":21},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":21},"end":{"row":1,"column":22},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":21},"end":{"row":1,"column":22},"action":"remove","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":20},"end":{"row":1,"column":21},"action":"remove","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":19},"end":{"row":1,"column":20},"action":"remove","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":18},"end":{"row":1,"column":19},"action":"remove","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":18},"end":{"row":1,"column":19},"action":"insert","lines":["T"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":19},"end":{"row":1,"column":20},"action":"insert","lines":["i"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":20},"end":{"row":1,"column":21},"action":"insert","lines":["m"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":21},"end":{"row":1,"column":22},"action":"insert","lines":["e"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":22},"end":{"row":1,"column":23},"action":"insert","lines":["s"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":23},"end":{"row":1,"column":24},"action":"insert","lines":["l"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":24},"end":{"row":1,"column":25},"action":"insert","lines":["o"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":25},"end":{"row":1,"column":26},"action":"insert","lines":["t"]}]}],[{"group":"doc","deltas":[{"start":{"row":1,"column":26},"end":{"row":1,"column":27},"action":"insert","lines":["s"]}]}]]},"ace":{"folds":[],"scrolltop":180,"scrollleft":0,"selection":{"start":{"row":2,"column":27},"end":{"row":2,"column":27},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":9,"state":"start","mode":"ace/mode/mysql"}},"timestamp":1421039621790,"hash":"c430accbf11db7d173f590e2de5efcff39b14d43"}