select `range_high`,`range_low` from `prices_adv` ORDER BY RAND() LIMIT 1 INTO @maxPrice,@minPrice;

select @maxPrice,@minPrice;
--  ----------------------------------------------------------------------------
--  Test of the Overlaped-By Allens relation
-- -----------------------------------------------------------------------------

SET profiling=1;

SELECT `b`.`price_id`,round(`b`.`range_low`/100,2),round(`b`.`range_high`/100,2)
FROM ( SELECT  `price_id`
    FROM `prices_basic`
    WHERE `range_low` > @minPrice -- starts after
    AND  `range_low` < @maxPrice  -- start before end 
    AND  `range_high` > @maxPrice -- finish after the end
    ORDER BY `range_high` ASC
    LIMIT 10
) a, prices_basic b
WHERE `a`.`price_id` = `b`.`price_id`;


SET profiling=0;
--  ----------------------------------------------------------------------------
--  Test of the Overlaped-By relation using tree method
-- -----------------------------------------------------------------------------

CALL bm_rules_timeslot_nodes_inner_right(@minPrice,@maxPrice);
CALL bm_rules_timeslot_nodes_top_right(@minPrice,@maxPrice);
CALL bm_rules_timeslot_nodes_bottom_right(@minPrice,@maxPrice);
SET @forkNode = utl_fork_node(@minPrice,@maxPrice);


SET profiling=1;

SELECT `b`.`price_id`, round(`b`.`range_low`/100,2), round(`b`.`range_high`/100,2)
FROM (
    SELECT `j`.`price_id`
    FROM (
        SELECT `price_id`,`range_high`
        FROM `prices_adv` i USE INDEX (`idx_prices_adv_upperLowerIndex`),
        (
            -- innerRight
            SELECT `node` FROM `timeslot_nodes_inner_right`
            UNION ALL
            -- upper
            SELECT @maxPrice as `node`
            UNION ALL
            -- forkNode
            SELECT @forkNode as `node`
        ) q 
        WHERE  `i`.`node` = `q`.`node`
        AND `i`.`range_low` > @minPrice
        AND `i`.`range_low` < @maxPrice
        AND `i`.`range_high` > @maxPrice
        
        UNION ALL
        
        SELECT `price_id`,`range_high`
        FROM `prices_adv` i USE INDEX (`idx_prices_adv_lowerUpperIndex`),
        (
            -- topRight
            SELECT `node` FROM `timeslot_nodes_top_right`
            -- bottomRight
            UNION ALL
            SELECT `node` FROM `timeslot_nodes_bottom_right`
        ) q 
        WHERE  `i`.`node` = `q`.`node`
        AND  @minPrice < `i`.`range_low`
        AND `i`.`range_low` < @maxPrice
    ) j 
    ORDER BY `j`.`range_high` ASC
    LIMIT 10
) a, prices_adv b
WHERE `a`.`price_id` = `b`.`price_id`;

SHOW PROFILES;

