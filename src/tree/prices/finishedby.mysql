select `range_high`,`range_low` from `prices_adv` ORDER BY RAND() LIMIT 1 INTO @maxPrice,@minPrice;
--  ----------------------------------------------------------------------------
--  Test of the FinishedBy Allens relation
-- -----------------------------------------------------------------------------

SET profiling=1;


SELECT `b`.`price_id`,round(`b`.`range_low`/100,2),round(`b`.`range_high`/100,2)
FROM ( SELECT `price_id`
    FROM `prices_basic` 
    WHERE `range_low` < @minPrice
    AND `range_high` = @maxPrice
    ORDER BY `range_high` ASC
    LIMIT 10
) a, prices_basic b
WHERE `a`.`price_id` = `b`.`price_id`;

SET profiling=0;

--  ----------------------------------------------------------------------------
--  Test of the FinishedBy Allens relation using tree method
-- -----------------------------------------------------------------------------

CALL bm_rules_timeslot_nodes_top_left(@minPrice,@maxPrice);
SET @forkNode  = utl_fork_node(@minPrice,@maxPrice);

SET profiling=1;


SELECT `b`.`price_id`, round(`b`.`range_low`/100,2), round(`b`.`range_high`/100,2)
FROM (
    SELECT `i`.`price_id`
    FROM `prices_adv` i USE INDEX (`idx_prices_adv_upperLowerIndex`), (
        -- TopLeft
        SELECT `node` FROM `timeslot_nodes_top_left`
        UNION ALL
        -- fork
        SELECT @forkNode as `node`
    ) n
    WHERE `i`.`node` = `n`.`node`
    AND `range_high` = @maxPrice
    AND `range_low` <  @minPrice
    ORDER BY `i`.`range_high` ASC
    LIMIT 10
) a, prices_adv b
WHERE `a`.`price_id` = `b`.`price_id`;

SHOW PROFILES;

