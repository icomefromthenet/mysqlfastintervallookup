-- -----------------------------------------------------------------------------
-- Example of Allens Relations
-- -----------------------------------------------------------------------------
/*
| Using the timslot_slots table for any two intervals 
| 
| Let p1 = opening_slot_id, p2 = closing_slot_id
| 
| Let q1 = opening_slot_id, q2 = closing_slot_id
| 
| Allens Relations
|
| 1. equals
| 2. before
| 3. after
| 4. meets
| 5. meets-by
| 6. overlaps
| 7. overlaps-by
| 8. during
| 9. includes
| 10. starts
| 11. stared-by
| 12. finishes
| 13. finished-by
|
| Combinaions
| 
|
*/

-- -----------------------------------------------------------------------------
-- The closed:open interval format
-- -----------------------------------------------------------------------------
-- There are four ways to represent an interval depending on the inclusion of the
-- opening and closing values. 

-- The generally prefered format in database is closed:open a closing interval is always
-- closing value +1 which actually the opening of the next interval range. 

-- Two intervals with 5 mintues each [1:6)
-- open:open     (0:6)
-- closed:closed [1:5]
-- open:closed   (0:5]
-- close:open    [1:6)

-- closed:open is prefered as it allows a continous range of intervals. If used
-- open:open the above range would be 1:5 and the next range would be 6:10 there
-- the gap between the intervals makes queries more difficult.

-- closed:open range [1:6) has excluded the closing value of 5 in favour of the opening
-- of the next interval range. The values of the range are 1,2,3,4,5. 


-- -----------------------------------------------------------------------------
-- Queries to find some slots for the examples, ignore for now
-- -----------------------------------------------------------------------------
    SELECT open_slot_id, close_slot_id  
    INTO @start_ofday, @close_ofday
    FROM calendar 
    WHERE y = (select max(y)-1 from calendar) 
    AND w   = 4 
    AND dw  = 1;

    SELECT opening_slot_id, closing_slot_id 
    INTO @start_slot_id, @close_slot_id
    FROM timeslot_slots 
    WHERE opening_slot_id <= @close_ofday 
    AND closing_slot_id  > @start_ofday
    LIMIT 1;

SET profiling=1;
/*
* 1. Relation Equals
*  
*  p <------------>
*  q <------------>
*   p1=q1 & q2=p2
* -- --------------------------------------------------------------------
* 
* Find the slots that 
*/

SELECT timeslot_id,opening_slot_id,closing_slot_id
FROM timeslot_slots 
WHERE opening_slot_id = @start_slot_id AND closing_slot_id = @close_slot_id; 



SHOW profiles;