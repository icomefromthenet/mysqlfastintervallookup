-- -----------------------------------------------------------------------------
-- Example of the Before Allens Relation
-- -----------------------------------------------------------------------------

-- Setup Queries ignore --------------------------------------------------------

    SELECT open_slot_id, close_slot_id  
    INTO @start_ofday, @close_ofday
    FROM calendar 
    WHERE y = (select max(y)-1 from calendar) 
    AND w   = 4 
    AND dw  = 1;

    SELECT opening_slot_id, closing_slot_id 
    INTO @start_slot_id, @close_slot_id
    FROM timeslot_slots 
    WHERE opening_slot_id <= @close_ofday 
    AND closing_slot_id  > @start_ofday
    AND timeslot_id = 4 -- hour timeslot
    LIMIT 1;
   
    
SET profiling=1;


-- -----------------------------------------------------------------------------
-- Before Relation
-- -----------------------------------------------------------------------------
--
--
--  p   <------->
--
--                q <------------>
-- 
--  p2 < q1
--
-- This relation finds interval p which start and end before q and has at least
-- ONE clock tick between the ending of p and start of q. Due to to closed:open 
-- format the closing value (p2) for interval p will be (last clock tick + 1) if our
-- interval set is continuous then p2 = q1 so we use '<' comparison to ensure that
-- at least one clock tick between p2 and q1.

    SELECT a.timeslot_id,a.opening_slot_id, s1.slot_open,a.closing_slot_id,s2.slot_close
    FROM timeslot_slots a 
    JOIN slots s1 ON s1.slot_id = a.opening_slot_id 
    JOIN slots s2 ON s2.slot_id = a.closing_slot_id     
    WHERE a.closing_slot_id < @start_slot_id
    AND a.timeslot_id = 4 -- hour timeslot
	ORDER BY a.timeslot_slot_id DESC
	LIMIT 1;
	

/*
 Result : This query finds the first slot from same group that occurs before the
          slot q with at least one click tick between them.
          
          We have selected as the q slot 0-1 am and considering that our timeslot 
          table is set of continuous slots.
          
          Would (q1 - INTERVAL 1 hour) ie 23-24 pm slot be selected by the above query? 
          NO it would not be as these two slots meet they have no clock ticks
          between them when one ends the other starts.
          
          We would expect that we get (q1 - INTERVAL 2 hour) ie 22-23 pm slot. This
          slot occurs before the q slot and has one slot between.
*/


-- -----------------------------------------------------------------------------
-- After Relation
-- -----------------------------------------------------------------------------
--
--
--                   p <------->
--
--  q <------------>
-- 
--  p1 > q1
--
-- This relation finds interval p which start after the q slot and has atleast
-- on click tick between the ending q2 and start p1.

    SELECT a.timeslot_id,a.opening_slot_id, s1.slot_open,a.closing_slot_id,s2.slot_close
    FROM timeslot_slots a
    JOIN slots s1 ON s1.slot_id = a.opening_slot_id 
    JOIN slots s2 ON s2.slot_id = a.closing_slot_id 
    WHERE a.opening_slot_id > @close_slot_id
    AND a.timeslot_id = 4 -- hour timeslot
    Order by a.opening_slot_id ASC
    LIMIT 1;
	
/*
 Result : This query finds the first slot from same group that occurs after the
          slot q with at least one click tick between them.
          
          We have selected as the q slot 0-1 am and considering that our timeslot 
          table is set of continuous slots.
          
          Would (q1 + INTERVAL 1 hour) ie 1-2 am slot be selected by the above query? 
          NO it would not be as these two slots meet they have no clock ticks
          between them when one ends the other starts.
          
          We would expect that we get (q1 + INTERVAL 2 hour) ie 2-3 am slot. This
          slot occurs after the q slot and has one slot between.
*/

 SHOW profiles;